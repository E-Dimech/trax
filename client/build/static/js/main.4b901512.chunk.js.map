{"version":3,"sources":["assets/icons/roller-coaster.svg","assets/animation/coastertrax.png","assets/animation/tracks.svg","assets/animation/wheel.png","assets/icons/coasterperson.svg","assets/images/traxLogo.png","assets/animation/Nature landscape background.jpg","assets/animation/coasterTrain.png","assets/images/maverick.png","assets/images/762a7944437539.58125ca053280.gif","assets/icons/clipart1941272.png","assets/icons/clipart242612.png","assets/icons/mic.svg","assets/icons/magnifier.svg","assets/icons/coasterPeople.svg","assets/images/hiclipart.com.png","components/Welcome/Welcome.js","config/fire.js","components/Login/Login.js","components/Home/Home.js","components/Landing/Landing.jsx","components/Search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Welcome","className","to","src","Trax","alt","Sky","Coaster","Tracks","Train","Wheel","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","login","e","preventDefault","auth","signInWithEmailAndPassword","state","email","password","then","res","database","ref","user","uid","update","u","console","log","catch","error","signUp","createUserWithEmailAndPassword","set","handleChange","setState","target","name","value","this","onChange","id","type","onClick","React","Component","Home","credCount","topFavCoasterNames","howMany","once","snapshot","child","numChildren","showFavourite","on","snap","val","Object","values","map","fav","top5","signOut","formatTop5","forEach","coaster","index","push","key","Maverick","loop","bubble","pathname","Boo","logout","coastie","Landing","authListener","bind","onAuthStateChanged","mic","window","SpeechRecognition","webkitSpeechRecognition","Search","fetchSearchResults","axios","get","params","query","results","data","handleOnInputChange","event","handleListen","isListening","start","onend","stop","onstart","onresult","transcript","Array","from","toLowerCase","join","onerror","handleSubmit","addCredit","location","creditName","addFavourite","message","scrollTo","rider","riders","onSubmit","htmlFor","placeholder","magnify","microphone","hasOwnProperty","park","height","speed","image","history","goBack","levi","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b901512.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/roller-coaster.361f6438.svg\";","module.exports = __webpack_public_path__ + \"static/media/coastertrax.2474bc3b.png\";","module.exports = __webpack_public_path__ + \"static/media/tracks.c3e55cbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/wheel.476d525a.png\";","module.exports = __webpack_public_path__ + \"static/media/coasterperson.1fcf7e72.svg\";","module.exports = __webpack_public_path__ + \"static/media/traxLogo.fb3e8f7e.png\";","module.exports = __webpack_public_path__ + \"static/media/Nature landscape background.2c6fa4f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coasterTrain.ae19dc55.png\";","module.exports = __webpack_public_path__ + \"static/media/maverick.5acf7718.png\";","module.exports = __webpack_public_path__ + \"static/media/762a7944437539.58125ca053280.f3a23c06.gif\";","module.exports = __webpack_public_path__ + \"static/media/clipart1941272.b8ed6ab8.png\";","module.exports = __webpack_public_path__ + \"static/media/clipart242612.72489012.png\";","module.exports = __webpack_public_path__ + \"static/media/mic.b741c76b.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.fb5f8b5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/coasterPeople.620f8f19.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiclipart.com.d6d59798.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Trax from \"../../assets/images/traxLogo.png\";\nimport Sky from \"../../assets/animation/Nature landscape background.jpg\";\nimport Coaster from \"../../assets/animation/coastertrax.png\";\nimport Tracks from \"../../assets/animation/tracks.svg\";\nimport Train from \"../../assets/animation/coasterTrain.png\";\nimport Wheel from \"../../assets/animation/wheel.png\";\nimport \"./Welcome.scss\";\n\nfunction Welcome() {\n  return (\n    <div className=\"welcome-page\">\n      <>\n        <Link to=\"/Landing\">\n          <img className=\"welcome-page__image\" src={Trax} alt=\"trax\" />\n        </Link>\n      </>\n      <img className=\"welcome-page__sky\" src={Sky} alt=\"night sky\" />\n      <img\n        className=\"welcome-page__coaster-skyline1\"\n        src={Coaster}\n        alt=\"coaster lift hill\"\n      />\n      <img\n        className=\"welcome-page__coaster-skyline2\"\n        src={Coaster}\n        alt=\"coaster lift hill\"\n      />\n      <img\n        className=\"welcome-page__coaster-tracks1\"\n        src={Tracks}\n        alt=\"coaster tracks\"\n      />\n      <img\n        className=\"welcome-page__coaster-tracks2\"\n        src={Tracks}\n        alt=\"coaster tracks\"\n      />\n      <img\n        className=\"welcome-page__coaster-train\"\n        src={Train}\n        alt=\"coaster train\"\n      />\n      <img\n        className=\"welcome-page__coaster-wheel1\"\n        src={Wheel}\n        alt=\"coaster wheel\"\n      />\n      <img\n        className=\"welcome-page__coaster-wheel2\"\n        src={Wheel}\n        alt=\"coaster wheel\"\n      />\n    </div>\n  );\n}\n\nexport default Welcome;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC-ZfR1rr3xEESMkDnz_AoqwXyyEh4111s\",\n  authDomain: \"trax-57508.firebaseapp.com\",\n  databaseURL: \"https://trax-57508.firebaseio.com\",\n  projectId: \"trax-57508\",\n  storageBucket: \"trax-57508.appspot.com\",\n  messagingSenderId: \"766748523509\",\n  appId: \"1:766748523509:web:b2992cf1b654b4726dbebc\",\n  measurementId: \"G-4956C08L3T\",\n};\nconst fire = firebase.initializeApp(firebaseConfig);\nexport default fire;\n","import React from \"react\";\nimport fire from \"../../config/fire\";\nimport firebase from \"firebase\";\nimport \"./Login.scss\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  login = (e) => {\n    e.preventDefault();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then((res) => {\n        firebase\n          .database()\n          .ref(\"users/\" + res.user.uid)\n          .update({\n            uid: res.user.uid,\n            email: res.user.email,\n          });\n      })\n      .then((u) => {\n        console.log(\"Successfully Logged in\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  signUp = (e) => {\n    e.preventDefault();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then((res) => {\n        firebase\n          .database()\n          .ref(\"users/\" + res.user.uid)\n          .set({\n            uid: res.user.uid,\n            email: res.user.email,\n          });\n      })\n      .then((u) => {\n        console.log(\"Successful Signup\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    return (\n      <>\n        <h2 className=\"login-form__heading\">TRAX</h2>\n        <div className=\"login-form\">\n          <form className=\"login-form__form\">\n            <div className=\"login-form__email-container\">\n              <label className=\"login-form__label\">Email Address</label>\n              <input\n                className=\"login-form__input\"\n                // autocomplete=\"off\"\n                value={this.state.email}\n                onChange={this.handleChange}\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n              />\n            </div>\n            <div className=\"login-form__password-container\">\n              <label className=\"login-form__label\">Password</label>\n              <input\n                className=\"login-form__input\"\n                value={this.state.password}\n                onChange={this.handleChange}\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n              />\n            </div>\n            <div className=\"login-form__button-container\">\n              <button\n                className=\"login-form__button-login\"\n                type=\"submit\"\n                onClick={this.login}\n              >\n                Login\n              </button>\n              <button\n                className=\"login-form__button-signup\"\n                type=\"submit\"\n                onClick={this.signUp}\n              >\n                Signup\n              </button>\n            </div>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport fire from \"../../config/fire\";\nimport { Link } from \"react-router-dom\";\nimport Maverick from \"../../assets/images/maverick.png\";\nimport Boo from \"../../assets/images/762a7944437539.58125ca053280.gif\";\nimport coastie from \"../../assets/icons/roller-coaster.svg\";\nimport loop from \"../../assets/icons/clipart1941272.png\";\n// import bubble from \"../../assets/icons/clipart164273.png\";\nimport bubble from \"../../assets/icons/clipart242612.png\";\n\nimport firebase from \"firebase\";\n\nimport \"./Home.scss\";\n\nclass Home extends React.Component {\n  state = {\n    credCount: null,\n    topFavCoasterNames: null,\n  };\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n  componentDidMount() {\n    this.howMany(this.props.uid);\n    this.showFavourite(this.props.uid);\n  }\n\n  howMany = (uid) => {\n    firebase\n      .database()\n      .ref(\"users/\" + uid)\n\n      .once(\"value\")\n      .then((snapshot) => {\n        const credCount = snapshot.child(\"credit\").numChildren();\n        this.setState({ credCount });\n      });\n  };\n\n  showFavourite = (uid) => {\n    firebase\n      .database()\n      .ref(\"users/\" + uid)\n      .child(\"favourite\")\n      .on(\"value\", (snap) => {\n        if (snap.val()) {\n          let favList = Object.values(snap.val());\n          const topFavCoasterNames = favList.map((fav) => fav.top5);\n          this.setState({ topFavCoasterNames });\n        }\n      });\n  };\n\n  render() {\n    const { topFavCoasterNames } = this.state;\n    let formatTop5 = [];\n    if (topFavCoasterNames) {\n      topFavCoasterNames.forEach((coaster, index) => {\n        formatTop5.push(coaster, <br key={index} />);\n      });\n    }\n    return (\n      <div className=\"welcome\">\n        <h1 className=\"welcome__title\">TRAX</h1>\n        <div className=\"welcome__img-container\">\n          <img className=\"welcome__image\" src={Maverick} alt=\"maverick\" />\n          <img className=\"welcome__loop\" src={loop} alt=\"coaster loop\" />\n          <img\n            className=\"welcome__cred-bubble\"\n            src={bubble}\n            alt=\"text bubble\"\n          />\n          <p className=\"welcome__cred-bubble--text\">CREDITS</p>\n          <p className=\"welcome__cred-bubble--creds\">{this.state.credCount}</p>\n        </div>\n\n        <div className=\"welcome__link-container\">\n          <Link\n            to={{\n              pathname: \"/Search\",\n              state: {\n                uid: this.props.uid,\n              },\n            }}\n          >\n            <button className=\"welcome__add-credit\">Add Credits</button>\n          </Link>\n        </div>\n\n        <div className=\"box\">\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <div className=\"content\">\n            <p className=\"welcome__fav-coasters-title\">TOP COASTERS</p>\n            <p className=\"welcome__fav-coasters-list\">{formatTop5}</p>\n          </div>\n        </div>\n        <img className=\"welcome__bottom-image\" src={Boo} alt=\"Ghost Rider\" />\n        <div className=\"welcome__logout-container\">\n          <button className=\"welcome__logout-button\" onClick={this.logout}>\n            Logout\n          </button>\n        </div>\n        <img\n          className=\"welcome__bottom-coaster\"\n          src={coastie}\n          alt=\"cartoon coaster\"\n        />\n        <div className=\"welcome__bottom-space\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport fire from \"../../config/fire\";\nimport Login from \"../Login/Login\";\nimport Home from \"../Home/Home\";\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n  render() {\n    return (\n      <>{this.state.user ? <Home uid={this.state.user.uid} /> : <Login />}</>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\n\nimport \"./Search.scss\";\n\nimport microphone from \"../../assets/icons/mic.svg\";\nimport magnify from \"../../assets/icons/magnifier.svg\";\nimport coastie from \"../../assets/icons/roller-coaster.svg\";\nimport rider from \"../../assets/icons/coasterperson.svg\";\nimport riders from \"../../assets/icons/coasterPeople.svg\";\nimport levi from \"../../assets/images/hiclipart.com.png\";\n\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\n\nconst mic = new SpeechRecognition();\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      results: {},\n      message: \"\",\n      credCount: null,\n      topFavCoasterNames: null,\n      isListening: false,\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    window.scrollTo(0, 0);\n    this.howMany();\n    this.showFavourite();\n  }\n\n  fetchSearchResults = (e) => {\n    e.preventDefault();\n    const testUrl = \"/search\";\n\n    axios\n      .get(testUrl, {\n        params: { query: this.state.query },\n      })\n      .then((res) => {\n        this.setState({\n          results: res.data,\n        });\n        console.log(res.data);\n      })\n      // };\n      .catch((error) => {\n        console.log(error, \"Where are all the coasters?\");\n      });\n  };\n\n  handleOnInputChange = (event) => {\n    // if statement to choose query type\n    const query = event.target.value;\n    this.setState({ query });\n  };\n\n  handleListen = () => {\n    if (this.state.isListening) {\n      mic.start();\n      mic.onend = () => {\n        console.log(\"continue...\");\n        mic.start();\n      };\n    } else {\n      mic.stop();\n      mic.onend = () => {\n        console.log(\"stopped mic\");\n      };\n    }\n    mic.onstart = () => {\n      console.log(\"mic on\");\n    };\n    mic.onresult = (e) => {\n      const transcript = Array.from(e.results)\n        .map((res) => res[0])\n        .map((res) => res.transcript.toLowerCase())\n        .join(\"\");\n      // set state for search here\n      this.setState({ query: transcript });\n      mic.onerror = (e) => {\n        console.log(e.error);\n      };\n    };\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      isListening: false,\n    });\n  };\n\n  addCredit = (e) => {\n    e.preventDefault();\n\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.location.state.uid)\n      .child(\"credit\")\n      .push({\n        creditName: this.state.results.name,\n      });\n    this.howMany();\n  };\n\n  howMany = () => {\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.location.state.uid)\n\n      .once(\"value\")\n      .then((snapshot) => {\n        const credCount = snapshot.child(\"credit\").numChildren();\n        this.setState({ credCount });\n      });\n  };\n\n  addFavourite = (e) => {\n    e.preventDefault();\n\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.location.state.uid)\n      .child(\"favourite\")\n      .push({\n        top5: this.state.results.name,\n      });\n    this.showFavourite();\n  };\n\n  showFavourite = () => {\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.location.state.uid)\n      .child(\"favourite\")\n      .on(\"value\", (snap) => {\n        if (snap.val()) {\n          let favList = Object.values(snap.val());\n          const topFavCoasterNames = favList.map((fav) => fav.top5);\n          this.setState({ topFavCoasterNames });\n        }\n      });\n  };\n\n  render() {\n    const { query, results, credCount, topFavCoasterNames } = this.state;\n\n    // Below formats new coaster favs to a new line\n    let formatTop5 = [];\n    if (topFavCoasterNames) {\n      topFavCoasterNames.forEach((coaster, index) => {\n        formatTop5.push(coaster, <br key={index} />);\n      });\n    }\n\n    return (\n      <div className=\"coaster-credit\">\n        <h2 className=\"coaster-credit__heading\">TRAX</h2>\n        <img\n          className=\"coaster-credit__cartoon-image\"\n          src={coastie}\n          alt=\"cartoon coaster\"\n        />\n        <h2 className=\"coaster-credit__title\">Total Coaster Credits</h2>\n        <p className=\"coaster-credit__credit-count\">{credCount}</p>\n        <h3 className=\"coaster-credit__fav-title\">Top Coasters</h3>\n        <p className=\"coaster-credit__favourites\">{formatTop5}</p>\n        <div className=\"coaster-credit__coaster-peeps-container\">\n          <img\n            className=\"coaster-credit__coaster-peeps-single\"\n            src={rider}\n            alt=\"test\"\n          />\n          <img\n            className=\"coaster-credit__coaster-peeps-double\"\n            src={riders}\n            alt=\"test\"\n          />\n          <img\n            className=\"coaster-credit__coaster-peeps-single\"\n            src={rider}\n            alt=\"test\"\n          />\n        </div>\n        <form onSubmit={(e) => this.fetchSearchResults(e)}>\n          <label\n            className=\"coaster-credit__search-label\"\n            htmlFor=\"search-input\"\n          >\n            <input\n              className=\"coaster-credit__search-input\"\n              // autoComplete=\"off\"\n              name=\"query\"\n              type=\"text\"\n              value={query}\n              id=\"search-input\"\n              placeholder=\"Enter Coaster Name...\"\n              onChange={(e) => this.handleOnInputChange(e)}\n              onSubmit={() => {\n                // this.setState({ isListening: false });\n                this.handleSubmit();\n              }}\n            />\n            <img\n              className=\"coaster-credit__search-icon\"\n              src={magnify}\n              alt=\"search\"\n            />\n            <img\n              className=\"coaster-credit__mic-icon\"\n              src={microphone}\n              alt=\"microphone\"\n              onClick={() => {\n                this.setState({ isListening: !this.state.isListening });\n                console.log(this.state.isListening);\n                this.handleListen();\n              }}\n            />\n          </label>\n        </form>\n        {\n          // Object.keys(this.state.results).length && (\n          this.state.results.hasOwnProperty(\"park\") && (\n            <div className=\"coaster-credit__search-stats\">\n              <p className=\"coaster-credit__search-stats-name\">\n                COASTER: {results.name}{\" \"}\n              </p>\n              <p className=\"coaster-credit__search-stats-park\">\n                PARK: {results.park}\n              </p>\n              <p className=\"coaster-credit__search-stats-height\">\n                HEIGHT: {results.height} m{\" \"}\n              </p>\n              <p className=\"coaster-credit__search-stats-speed\">\n                SPEED: {results.speed} mph{\" \"}\n              </p>\n              <img\n                className=\"coaster-credit__search-stats-image\"\n                src={results.image}\n                alt=\"coaster\"\n              />\n              <button\n                onClick={this.addCredit}\n                className=\"coaster-credit__search-stats-add-button\"\n              >\n                ADD COASTER CREDIT\n              </button>\n              {/* <button\n                onClick={this.deleteCredit}\n                className=\"search-stats__deleteCredit\"\n              >\n                DELETE COASTER\n              </button> */}\n              <button\n                onClick={this.addFavourite}\n                className=\"coaster-credit__search-stats-add-button\"\n              >\n                ADD TO TOP COASTERS\n              </button>\n            </div>\n          )\n        }\n        <button\n          className=\"coaster-credit__search-stats-home-button\"\n          onClick={this.props.history.goBack}\n        >\n          Home\n        </button>\n        <img\n          className=\"coaster-credit__search-stats-bottom-logo\"\n          src={levi}\n          alt=\"leviathan\"\n        />\n        {/* <Home credCount={this.state.credCount} /> */}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n\n// deleteCredit = (e) => {\n//   e.preventDefault();\n\n//   firebase\n//     .database()\n//     .ref(\"users/\" + this.props.location.state.uid)\n//     .child(\"credit\")\n//     .update({\n//       creditName: this.state.results.name,\n//     });\n//   this.howMany();\n// };\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Welcome from \"./components/Welcome/Welcome\";\nimport Landing from \"./components/Landing/Landing\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport Search from \"./components/Search/Search.jsx\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Welcome} />\n        <Route path=\"/Landing\" component={Landing} />\n        <Route path=\"/Login\" component={Login} />\n        <Route path=\"/Home\" component={Home} />\n        <Route path=\"/Search\" component={Search} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}