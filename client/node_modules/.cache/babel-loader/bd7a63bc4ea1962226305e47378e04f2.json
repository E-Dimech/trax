{"ast":null,"code":"var _jsxFileName = \"/Users/ericdimech/Dev/trax/client/src/components/Search/Search.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./Search.scss\";\nimport magnify from \"../../assets/icons/magnifier.svg\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSearchResults =\n    /*updatedPageNo = \"\",*/\n    _query => {\n      // const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n      // const searchUrl = `https://pixabay.com/api/?key=12413278-79b713c7e196c7a3defb5330e&q=${query}${pageNumber}`;\n      const testUrl = \"http://localhost:8080/search\";\n      /* + query*/\n      // if (this.cancel) {\n      //   this.cancel.cancel(); // Cancel the previous request before making a new request\n      // }\n      // this.cancel = axios.CancelToken.source(); // Create a new CancelToken\n\n      axios.get(testUrl, {\n        params: {\n          query: this.state.query\n        }\n      } // ,\n      // {\n      //   cancelToken: this.cancel.token,\n      // }\n      ).then(res => {\n        console.log(res); // Change hits to match coaster data\n\n        const resultsNotFoundMsg = !res.data.length ? \"Where are all the coasters?\" : \"\";\n        this.setState({\n          // CHANGE HITS TO PARK ASSOCIATED NAME IN DATA\n          results: res.data\n          /* data[\"hydra:member\"][0].name */\n          ,\n          message: resultsNotFoundMsg\n        });\n      }).catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            message: \"Where are all the coasters?\"\n          });\n        }\n      });\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n\n      if (!query) {\n        this.setState({\n          query,\n          results: {}\n        });\n      } else {\n        this.setState({\n          query,\n          loading: true,\n          message: \"\"\n        }, () => {\n          this.fetchSearchResults(1, query);\n        });\n      }\n    };\n\n    this.renderSearchResults = () => {\n      const {\n        results\n      } = this.state;\n\n      if (Object.keys(results).length && results.length) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"results-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }\n        }, results.map(results => {\n          console.log(results);\n          return (\n            /*#__PURE__*/\n            //   Make this the park name, onclick user will see coasters\n            React.createElement(\"a\", {\n              key: results.id,\n              href: results.image,\n              className: \"result-item\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"image-wrapper\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: results.previewURL,\n              alt: results.username,\n              className: \"image\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }\n            })))\n          );\n        }));\n      }\n    };\n\n    this.state = {\n      query: \"\",\n      results: {},\n      message: \"\"\n    }; // this.cancel = \"\";\n  }\n\n  render() {\n    // console.log(this.handleOnInputChange);\n    const {\n      query,\n      message\n    } = this.state;\n    console.log(query);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"TRAX\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"search-label\",\n      htmlFor: \"search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"container-input\",\n      name: \"query\",\n      type: \"text\",\n      value: query,\n      id: \"search-input\",\n      placeholder: \"Enter Park Name...\",\n      onChange: this.handleOnInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"search-icon\",\n      src: magnify,\n      alt: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    })), message && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, message), this.renderSearchResults());\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/ericdimech/Dev/trax/client/src/components/Search/Search.jsx"],"names":["React","axios","Search","Component","constructor","props","fetchSearchResults","_query","testUrl","get","params","query","state","then","res","console","log","resultsNotFoundMsg","data","length","setState","results","message","catch","error","isCancel","handleOnInputChange","event","target","value","loading","renderSearchResults","Object","keys","map","id","image","previewURL","username","render","magnify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./Search.scss\";\nimport magnify from \"../../assets/icons/magnifier.svg\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      results: {},\n      message: \"\",\n    };\n    // this.cancel = \"\";\n  }\n\n  fetchSearchResults = (/*updatedPageNo = \"\",*/ _query) => {\n    // const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n    // const searchUrl = `https://pixabay.com/api/?key=12413278-79b713c7e196c7a3defb5330e&q=${query}${pageNumber}`;\n    const testUrl = \"http://localhost:8080/search\"; /* + query*/\n    // if (this.cancel) {\n    //   this.cancel.cancel(); // Cancel the previous request before making a new request\n    // }\n    // this.cancel = axios.CancelToken.source(); // Create a new CancelToken\n\n    axios\n      .get(\n        testUrl,\n        {\n          params: { query: this.state.query },\n        }\n        // ,\n        // {\n        //   cancelToken: this.cancel.token,\n        // }\n      )\n      .then((res) => {\n        console.log(res);\n\n        // Change hits to match coaster data\n        const resultsNotFoundMsg = !res.data.length\n          ? \"Where are all the coasters?\"\n          : \"\";\n        this.setState({\n          // CHANGE HITS TO PARK ASSOCIATED NAME IN DATA\n          results: res.data /* data[\"hydra:member\"][0].name */,\n          message: resultsNotFoundMsg,\n        });\n      })\n      .catch((error) => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            message: \"Where are all the coasters?\",\n          });\n        }\n      });\n  };\n\n  handleOnInputChange = (event) => {\n    const query = event.target.value;\n    if (!query) {\n      this.setState({ query, results: {} });\n    } else {\n      this.setState({ query, loading: true, message: \"\" }, () => {\n        this.fetchSearchResults(1, query);\n      });\n    }\n  };\n\n  renderSearchResults = () => {\n    const { results } = this.state;\n\n    if (Object.keys(results).length && results.length) {\n      return (\n        <div className=\"results-container\">\n          {results.map((results) => {\n            console.log(results);\n\n            return (\n              //   Make this the park name, onclick user will see coasters\n              <a key={results.id} href={results.image} className=\"result-item\">\n                {/* CONFIGURE THIS SECTION TO MATCH COASTER DATA */}\n                {/* <h6 className=\"image-username\">{results.name}</h6> */}\n                <div className=\"image-wrapper\">\n                  <img\n                    src={results.previewURL}\n                    alt={results.username}\n                    className=\"image\"\n                  />\n                </div>\n              </a>\n            );\n          })}\n        </div>\n      );\n    }\n  };\n\n  render() {\n    // console.log(this.handleOnInputChange);\n    const { query, message } = this.state;\n    console.log(query);\n    return (\n      <div className=\"container\">\n        <h2 className=\"heading\">TRAX</h2>\n\n        <label className=\"search-label\" htmlFor=\"search-input\">\n          <input\n            className=\"container-input\"\n            name=\"query\"\n            type=\"text\"\n            value={query}\n            id=\"search-input\"\n            placeholder=\"Enter Park Name...\"\n            onChange={this.handleOnInputChange}\n          />\n          {/* Find search img */}\n          <img className=\"search-icon\" src={magnify} alt=\"search\" />\n        </label>\n        {/*Error Message*/}\n        {message && <p className=\"message\">{message}</p>}\n        {/* Result */}\n        {this.renderSearchResults()}\n      </div>\n    );\n  }\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}