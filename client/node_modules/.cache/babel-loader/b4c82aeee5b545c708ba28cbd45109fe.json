{"ast":null,"code":"var _jsxFileName = \"/Users/ericdimech/Dev/trax/client/src/components/Search/Search.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./Search.scss\";\nimport magnify from \"../../assets/icons/magnifier.svg\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSearchResults = e => {\n      // const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n      const testUrl = \"http://localhost:8080/search\";\n      e.preventDefault();\n      /* + query*/\n      // if (this.cancel) {\n      //   this.cancel.cancel(); // Cancel the previous request before making a new request\n      // }\n      // this.cancel = axios.CancelToken.source(); // Create a new CancelToken\n\n      axios.get(testUrl, {\n        params: {\n          query: this.state.query\n        }\n      } // {\n      //   cancelToken: this.cancel.token,\n      // }\n      ).then(res => {\n        // console.log(res);\n        // const resultsNotFoundMsg = !res.data.length\n        //   ? \"Where are all the coasters?\"\n        //   : \"\";\n        this.setState({\n          results: res.data // message: resultsNotFoundMsg,\n\n        });\n        console.log(res.data);\n      }); // .catch((error) => {\n      //   if (axios.isCancel(error) || error) {\n      //     this.setState({\n      //       message: \"Where are all the coasters?\",\n      //     });\n      //   }\n      // });\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n      this.setState({\n        query\n      }); // if (!query) {\n      //   this.setState({ query, results: {} });\n      // } else {\n      //   this.setState({ query, loading: true, message: \"\" }, () => {\n      //     this.fetchSearchResults(1, query);\n      //   });\n      // }\n    };\n\n    this.state = {\n      query: \"\",\n      results: {},\n      message: \"\"\n    }; // this.cancel = \"\";\n  }\n\n  // renderSearchResults = () => {\n  //   // const { results } = this.state;\n  //   const results = this.state.results;\n  //   console.log(results, \"this is the result\");\n  //   console.log(this.state.results, \"this is this.state\");\n  //   if (Object.keys(results).length && results.length) {\n  //     return (\n  //       <div className=\"results-container\">\n  //         {this.state.results.map((results) => {\n  //           return <p>{results.name}testing</p>;\n  //           // return (\n  //           //   //   Make this the park name, onclick user will see coasters\n  //           //   <a key={results.id} href={results.image} className=\"result-item\">\n  //           //     {/* CONFIGURE THIS SECTION TO MATCH COASTER DATA */}\n  //           //     {/* <h6 className=\"image-username\">{results.name}</h6> */}\n  //           //     <div className=\"image-wrapper\">\n  //           //       <img\n  //           //         src={results.previewURL}\n  //           //         alt={results.username}\n  //           //         className=\"image\"\n  //           //       />\n  //           //     </div>\n  //           //   </a>\n  //           // );\n  //         })}\n  //       </div>\n  //     );\n  //   }\n  // };\n  // hide = () => {\n  //   this.setState({ hide: false });\n  // };\n  render() {\n    const {\n      query,\n      results\n    } = this.state;\n    console.log(results);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"TRAX\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"search-label\",\n      htmlFor: \"search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"container-input\",\n      name: \"query\",\n      type: \"text\",\n      value: query,\n      id: \"search-input\",\n      placeholder: \"Enter Park Name...\",\n      onChange: e => this.handleOnInputChange(e),\n      onSubmit: e => this.fetchSearchResults(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"search-icon\",\n      src: magnify,\n      alt: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }))), Object.keys(this.state.results).length && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Coaster: \", results.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Park: \", results.park), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Height: \", results.height, \" m \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Speed: \", results.speed, \" mph \")));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/ericdimech/Dev/trax/client/src/components/Search/Search.jsx"],"names":["React","axios","Search","Component","constructor","props","fetchSearchResults","e","testUrl","preventDefault","get","params","query","state","then","res","setState","results","data","console","log","handleOnInputChange","event","target","value","message","render","magnify","Object","keys","length","name","park","height","speed"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./Search.scss\";\nimport magnify from \"../../assets/icons/magnifier.svg\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      results: {},\n      message: \"\",\n    };\n    // this.cancel = \"\";\n  }\n\n  fetchSearchResults = (e) => {\n    // const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n    const testUrl = \"http://localhost:8080/search\";\n    e.preventDefault();\n\n    /* + query*/\n    // if (this.cancel) {\n    //   this.cancel.cancel(); // Cancel the previous request before making a new request\n    // }\n    // this.cancel = axios.CancelToken.source(); // Create a new CancelToken\n\n    axios\n      .get(\n        testUrl,\n        {\n          params: { query: this.state.query },\n        }\n        // {\n        //   cancelToken: this.cancel.token,\n        // }\n      )\n      .then((res) => {\n        // console.log(res);\n\n        // const resultsNotFoundMsg = !res.data.length\n        //   ? \"Where are all the coasters?\"\n        //   : \"\";\n        this.setState({\n          results: res.data,\n          // message: resultsNotFoundMsg,\n        });\n        console.log(res.data);\n      });\n    // .catch((error) => {\n    //   if (axios.isCancel(error) || error) {\n    //     this.setState({\n    //       message: \"Where are all the coasters?\",\n    //     });\n    //   }\n    // });\n  };\n\n  handleOnInputChange = (event) => {\n    const query = event.target.value;\n    this.setState({ query });\n    // if (!query) {\n    //   this.setState({ query, results: {} });\n    // } else {\n    //   this.setState({ query, loading: true, message: \"\" }, () => {\n    //     this.fetchSearchResults(1, query);\n    //   });\n    // }\n  };\n\n  // renderSearchResults = () => {\n  //   // const { results } = this.state;\n  //   const results = this.state.results;\n  //   console.log(results, \"this is the result\");\n  //   console.log(this.state.results, \"this is this.state\");\n  //   if (Object.keys(results).length && results.length) {\n  //     return (\n  //       <div className=\"results-container\">\n  //         {this.state.results.map((results) => {\n  //           return <p>{results.name}testing</p>;\n  //           // return (\n  //           //   //   Make this the park name, onclick user will see coasters\n  //           //   <a key={results.id} href={results.image} className=\"result-item\">\n  //           //     {/* CONFIGURE THIS SECTION TO MATCH COASTER DATA */}\n  //           //     {/* <h6 className=\"image-username\">{results.name}</h6> */}\n  //           //     <div className=\"image-wrapper\">\n  //           //       <img\n  //           //         src={results.previewURL}\n  //           //         alt={results.username}\n  //           //         className=\"image\"\n  //           //       />\n  //           //     </div>\n  //           //   </a>\n  //           // );\n  //         })}\n  //       </div>\n  //     );\n  //   }\n  // };\n  // hide = () => {\n  //   this.setState({ hide: false });\n  // };\n\n  render() {\n    const { query, results } = this.state;\n    console.log(results);\n\n    return (\n      <div className=\"container\">\n        <h2 className=\"heading\">TRAX</h2>\n\n        <form>\n          <label className=\"search-label\" htmlFor=\"search-input\">\n            <input\n              className=\"container-input\"\n              name=\"query\"\n              type=\"text\"\n              value={query}\n              id=\"search-input\"\n              placeholder=\"Enter Park Name...\"\n              onChange={(e) => this.handleOnInputChange(e)}\n              onSubmit={(e) => this.fetchSearchResults(e)}\n            />\n            <img className=\"search-icon\" src={magnify} alt=\"search\" />\n          </label>\n        </form>\n        {/* hasOwnProperty(\"park\") no keys*/}\n        {Object.keys(this.state.results).length && (\n          <div>\n            <p>Coaster: {results.name} </p>\n            <p>Park: {results.park}</p>\n            <p>Height: {results.height} m </p>\n            <p>Speed: {results.speed} mph </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}