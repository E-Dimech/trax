{"ast":null,"code":"var _jsxFileName = \"/Users/ericdimech/Dev/trax/client/src/components/Search/Search.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./Search.scss\";\nimport magnify from \"../../assets/icons/magnifier.svg\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSearchResults =\n    /*updatedPageNo = \"\",*/\n    _query => {\n      // const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n      const testUrl = \"http://localhost:8080/search\";\n      /* + query*/\n      // if (this.cancel) {\n      //   this.cancel.cancel(); // Cancel the previous request before making a new request\n      // }\n      // this.cancel = axios.CancelToken.source(); // Create a new CancelToken\n\n      axios.get(testUrl, {\n        params: {\n          query: this.state.query\n        }\n      } // {\n      //   cancelToken: this.cancel.token,\n      // }\n      ).then(res => {\n        // console.log(res);\n        // const resultsNotFoundMsg = !res.data.length\n        //   ? \"Where are all the coasters?\"\n        //   : \"\";\n        this.setState({\n          results: res.data // message: resultsNotFoundMsg,\n\n        }); // console.log(res.data);\n      }); // .catch((error) => {\n      //   if (axios.isCancel(error) || error) {\n      //     this.setState({\n      //       message: \"Where are all the coasters?\",\n      //     });\n      //   }\n      // });\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n\n      if (!query) {\n        this.setState({\n          query,\n          results: {}\n        });\n      } else {\n        this.setState({\n          query,\n          loading: true,\n          message: \"\"\n        }, () => {\n          this.fetchSearchResults(1, query);\n        });\n      }\n    };\n\n    this.state = {\n      query: \"\",\n      results: {},\n      message: \"\"\n    }; // this.cancel = \"\";\n  }\n\n  // renderSearchResults = () => {\n  //   // const { results } = this.state;\n  //   const results = this.state.results;\n  //   console.log(results, \"this is the result\");\n  //   console.log(this.state.results, \"this is this.state\");\n  //   if (Object.keys(results).length && results.length) {\n  //     return (\n  //       <div className=\"results-container\">\n  //         {this.state.results.map((results) => {\n  //           return <p>{results.name}testing</p>;\n  //           // return (\n  //           //   //   Make this the park name, onclick user will see coasters\n  //           //   <a key={results.id} href={results.image} className=\"result-item\">\n  //           //     {/* CONFIGURE THIS SECTION TO MATCH COASTER DATA */}\n  //           //     {/* <h6 className=\"image-username\">{results.name}</h6> */}\n  //           //     <div className=\"image-wrapper\">\n  //           //       <img\n  //           //         src={results.previewURL}\n  //           //         alt={results.username}\n  //           //         className=\"image\"\n  //           //       />\n  //           //     </div>\n  //           //   </a>\n  //           // );\n  //         })}\n  //       </div>\n  //     );\n  //   }\n  // };\n  // hide = () => {\n  //   this.setState({ hide: false });\n  // };\n  render() {\n    const {\n      query,\n      results\n    } = this.state;\n    console.log(results);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"TRAX\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"search-label\",\n      htmlFor: \"search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"container-input\",\n      name: \"query\",\n      type: \"text\",\n      value: query,\n      id: \"search-input\",\n      placeholder: \"Enter Park Name...\",\n      onChange: this.handleOnInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"search-icon\",\n      src: magnify,\n      alt: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    })), Object.keys(this.state.results).length && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Coaster: \", results.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Park: \", results.park), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Height: \", results.height, \" m \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Speed: \", results.speed, \" mph \")));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/ericdimech/Dev/trax/client/src/components/Search/Search.jsx"],"names":["React","axios","Search","Component","constructor","props","fetchSearchResults","_query","testUrl","get","params","query","state","then","res","setState","results","data","handleOnInputChange","event","target","value","loading","message","render","console","log","magnify","Object","keys","length","name","park","height","speed"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./Search.scss\";\nimport magnify from \"../../assets/icons/magnifier.svg\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      results: {},\n      message: \"\",\n    };\n    // this.cancel = \"\";\n  }\n\n  fetchSearchResults = (/*updatedPageNo = \"\",*/ _query) => {\n    // const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : \"\";\n    const testUrl = \"http://localhost:8080/search\"; /* + query*/\n    // if (this.cancel) {\n    //   this.cancel.cancel(); // Cancel the previous request before making a new request\n    // }\n    // this.cancel = axios.CancelToken.source(); // Create a new CancelToken\n\n    axios\n      .get(\n        testUrl,\n        {\n          params: { query: this.state.query },\n        }\n        // {\n        //   cancelToken: this.cancel.token,\n        // }\n      )\n      .then((res) => {\n        // console.log(res);\n\n        // const resultsNotFoundMsg = !res.data.length\n        //   ? \"Where are all the coasters?\"\n        //   : \"\";\n        this.setState({\n          results: res.data,\n          // message: resultsNotFoundMsg,\n        });\n        // console.log(res.data);\n      });\n    // .catch((error) => {\n    //   if (axios.isCancel(error) || error) {\n    //     this.setState({\n    //       message: \"Where are all the coasters?\",\n    //     });\n    //   }\n    // });\n  };\n\n  handleOnInputChange = (event) => {\n    const query = event.target.value;\n    if (!query) {\n      this.setState({ query, results: {} });\n    } else {\n      this.setState({ query, loading: true, message: \"\" }, () => {\n        this.fetchSearchResults(1, query);\n      });\n    }\n  };\n\n  // renderSearchResults = () => {\n  //   // const { results } = this.state;\n  //   const results = this.state.results;\n  //   console.log(results, \"this is the result\");\n  //   console.log(this.state.results, \"this is this.state\");\n  //   if (Object.keys(results).length && results.length) {\n  //     return (\n  //       <div className=\"results-container\">\n  //         {this.state.results.map((results) => {\n  //           return <p>{results.name}testing</p>;\n  //           // return (\n  //           //   //   Make this the park name, onclick user will see coasters\n  //           //   <a key={results.id} href={results.image} className=\"result-item\">\n  //           //     {/* CONFIGURE THIS SECTION TO MATCH COASTER DATA */}\n  //           //     {/* <h6 className=\"image-username\">{results.name}</h6> */}\n  //           //     <div className=\"image-wrapper\">\n  //           //       <img\n  //           //         src={results.previewURL}\n  //           //         alt={results.username}\n  //           //         className=\"image\"\n  //           //       />\n  //           //     </div>\n  //           //   </a>\n  //           // );\n  //         })}\n  //       </div>\n  //     );\n  //   }\n  // };\n  // hide = () => {\n  //   this.setState({ hide: false });\n  // };\n\n  render() {\n    const { query, results } = this.state;\n    console.log(results);\n\n    return (\n      <div className=\"container\">\n        <h2 className=\"heading\">TRAX</h2>\n\n        <label className=\"search-label\" htmlFor=\"search-input\">\n          <input\n            className=\"container-input\"\n            name=\"query\"\n            type=\"text\"\n            value={query}\n            id=\"search-input\"\n            placeholder=\"Enter Park Name...\"\n            onChange={this.handleOnInputChange}\n          />\n          <img className=\"search-icon\" src={magnify} alt=\"search\" />\n        </label>\n        {/* hasOwnProperty(\"park\") no keys*/}\n        {Object.keys(this.state.results).length && (\n          <div>\n            <p>Coaster: {results.name} </p>\n            <p>Park: {results.park}</p>\n            <p>Height: {results.height} m </p>\n            <p>Speed: {results.speed} mph </p>\n          </div>\n        )}\n        {/* <div>{hide}</div> */}\n        {/* <div>\n          Coaster: <b>{results ? results.name : null} </b>\n        </div> */}\n        {/* <p>Coaster: {results.name} </p>\n        <p>Park: {results.park}</p>\n        <p>Height: {results.height}</p>\n        <p>Speed: {results.speed}</p> */}\n        {/* <img src={results.image} alt=\"roller coaster\" /> */}\n        {/* {message && <p className=\"message\">{message}</p>} */}\n        {/* {this.renderSearchResults()} */}\n      </div>\n    );\n  }\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}